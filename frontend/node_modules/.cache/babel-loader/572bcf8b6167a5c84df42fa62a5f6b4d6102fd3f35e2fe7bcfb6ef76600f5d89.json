{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simeo\\\\Documents\\\\Simi perso\\\\Onksone General\\\\Onskone\\\\frontend\\\\src\\\\pages\\\\Lobby.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport socket from '../utils/socket'; // Ton instance de socket.io\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lobby = () => {\n  _s();\n  const {\n    lobbyCode\n  } = useParams();\n  const [players, setPlayers] = useState([]);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const generateLink = () => {\n    const link = `${window.location.origin}/?lobbyCode=${lobbyCode}`;\n    navigator.clipboard.writeText(link) // Copie le lien dans le presse-papiers\n    .then(() => {\n      alert('Lien d\\'invitation copié dans le presse-papiers : ' + link);\n    }).catch(error => {\n      console.error('Erreur lors de la copie du lien :', error);\n    });\n  };\n  const leaveLobby = () => {\n    socket.emit('leaveLobby', {\n      lobbyCode: lobbyCode,\n      playerId: currentPlayerId\n    });\n    console.log('Quitter le salon');\n  };\n  useEffect(() => {\n    // Charger les joueurs existants au début (lorsque l'utilisateur entre dans le lobby)\n    socket.emit('getLobbyPlayers', {\n      lobbyCode\n    });\n\n    // Écouter l'événement de mise à jour des joueurs (lorsqu'un joueur rejoint)\n    socket.on('playerJoined', data => {\n      setPlayers(data.players); // Mettre à jour la liste des joueurs\n      // Set in localstorage\n    });\n    socket.on('playerLeft', data => {\n      setPlayers(data.players); // Mettre à jour la liste des joueurs\n    });\n    socket.on('joinedLobby', data => {\n      setCurrentPlayerId(data.playerId);\n    });\n\n    // Nettoyer les écouteurs pour éviter les doublons\n    return () => {\n      socket.off('playerJoined');\n      socket.off('playerLeft');\n    };\n  }, [lobbyCode]); // Ce useEffect se déclenche à chaque changement de lobbyCode\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Salon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Bienvenue dans le salon \", lobbyCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Joueurs dans le salon :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [player.name, \" \", player.isHost && '(Hôte)']\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateLink,\n      children: \"Lien d'invitation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: leaveLobby,\n      children: \"Quitter le salon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Lobby, \"3T5w2puHgieme/RZkwVUYgnH2rM=\", false, function () {\n  return [useParams];\n});\n_c = Lobby;\nexport default Lobby;\nvar _c;\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"names":["React","useEffect","useState","useParams","socket","jsxDEV","_jsxDEV","Lobby","_s","lobbyCode","players","setPlayers","currentPlayerId","setCurrentPlayerId","generateLink","link","window","location","origin","navigator","clipboard","writeText","then","alert","catch","error","console","leaveLobby","emit","playerId","log","on","data","off","children","fileName","_jsxFileName","lineNumber","columnNumber","map","player","name","isHost","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/simeo/Documents/Simi perso/Onksone General/Onskone/frontend/src/pages/Lobby.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport socket from '../utils/socket'; // Ton instance de socket.io\r\n\r\nconst Lobby = () => {\r\n  const { lobbyCode } = useParams();\r\n  const [players, setPlayers] = useState<{\r\n    id: string; name: string; isHost: boolean; score: number\r\n  }[]>([]);\r\n  const [currentPlayerId, setCurrentPlayerId] = useState<string | null>(null);\r\n\r\n  const generateLink = () => {\r\n    const link = `${window.location.origin}/?lobbyCode=${lobbyCode}`;\r\n    navigator.clipboard.writeText(link) // Copie le lien dans le presse-papiers\r\n      .then(() => {\r\n        alert('Lien d\\'invitation copié dans le presse-papiers : ' + link);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erreur lors de la copie du lien :', error);\r\n      });\r\n  }\r\n\r\n  const leaveLobby = () => {\r\n    socket.emit('leaveLobby', { lobbyCode: lobbyCode, playerId: currentPlayerId });\r\n    console.log('Quitter le salon');\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Charger les joueurs existants au début (lorsque l'utilisateur entre dans le lobby)\r\n    socket.emit('getLobbyPlayers', { lobbyCode });\r\n\r\n    // Écouter l'événement de mise à jour des joueurs (lorsqu'un joueur rejoint)\r\n    socket.on('playerJoined', (data: { players: { id: string; name: string; isHost: boolean; score: number }[] }) => {\r\n      setPlayers(data.players); // Mettre à jour la liste des joueurs\r\n      // Set in localstorage\r\n\r\n    });\r\n\r\n    socket.on('playerLeft', (data: { players: { id: string; name: string; isHost: boolean; score: number }[] }) => {\r\n      setPlayers(data.players); // Mettre à jour la liste des joueurs\r\n    });\r\n\r\n    socket.on('joinedLobby', (data: { playerId: string }) => {\r\n      setCurrentPlayerId(data.playerId);\r\n    });\r\n\r\n    // Nettoyer les écouteurs pour éviter les doublons\r\n    return () => {\r\n      socket.off('playerJoined');\r\n      socket.off('playerLeft');\r\n    };\r\n  }, [lobbyCode]); // Ce useEffect se déclenche à chaque changement de lobbyCode\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Salon</h1>\r\n      <h2>Bienvenue dans le salon {lobbyCode}</h2>\r\n      <h3>Joueurs dans le salon :</h3>\r\n      <ul>\r\n        {players.map((player) => (\r\n          <li key={player.id}>\r\n            {player.name} {player.isHost && '(Hôte)'}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={generateLink}>Lien d'invitation</button>\r\n      <button onClick={leaveLobby}>Quitter le salon</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lobby;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}